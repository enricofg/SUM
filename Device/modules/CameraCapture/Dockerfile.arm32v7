#FROM balenalib/raspberrypi3:stretch
FROM  balenalib/raspberrypi3-python:3.7.12-latest-build
#:3.9-buster
# ENV UDEV=1 
#FROM balenalib/raspberrypi3-debian-python:3.7-stretch
#FROM arm32v7/python:3.9-slim-stretch
# FROM arm32v7/python:3.9-sl
#FROM balenalib/raspberrypi3-python:3.7.12-latest-build

RUN [ "cross-build-start" ]
WORKDIR /app
ENV OPENCV_VERSION="4.5.3"
# Install dependencies
 #sudo apt-get update
RUN pip install --upgrade pip

RUN apt-get -qq update && apt-get -qq upgrade\
    && apt-get -qq install cmake gfortran wget unzip build-essential cmake git yasm pkg-config \
    #python3-dev python3-numpy\
    libjpeg-dev libtiff-dev libgif-dev\
    libgstreamer1.0-dev gstreamer1.0-gtk3\
    libgstreamer-plugins-base1.0-dev gstreamer1.0-gl\
    libavcodec-dev libavformat-dev libswscale-dev\
    libgtk2.0-dev libcanberra-gtk*\
    libxvidcore-dev libx264-dev libgtk-3-dev\
    libtbb2 libtbb-dev libdc1394-22-dev libv4l-dev\
    libopenblas-dev libatlas-base-dev libblas-dev\
    libjasper-dev liblapack-dev libhdf5-dev\
    protobuf-compiler

RUN pip3 install numpy 

# RUN wget https://github.com/Qengineering/Install-OpenCV-Raspberry-Pi-32-bits/raw/main/OpenCV-4-5-4.sh
# RUN sudo chmod 755 ./OpenCV-4-5-4.sh
# RUN ./OpenCV-4-5-4.sh
WORKDIR /root 
# RUN apt-get install qt5-default
RUN wget -O opencv.zip https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip
RUN wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/${OPENCV_VERSION}.zip
RUN unzip opencv.zip
RUN unzip opencv_contrib.zip
RUN mv opencv-${OPENCV_VERSION} opencv
RUN mv opencv_contrib-${OPENCV_VERSION} opencv_contrib

# RUN unzip -qq opencv.zip -d /opt \
#     && unzip -qq opencv_contrib.zip -d /opt \
#     && rm -rf opencv.zip \
#     && rm -rf opencv_contrib.zip 

# RUN cd opencv
# RUN mkdir build
# RUN cd build
# RUN pwd & ls

WORKDIR /root/opencv/build
# run cmake

RUN cmake -D CMAKE_BUILD_TYPE=RELEASE \
-D CMAKE_INSTALL_PREFIX=/usr/local \
-D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib/modules \
-D ENABLE_NEON=ON \
-D ENABLE_VFPV3=ON \
-D WITH_OPENMP=ON \
-D WITH_OPENCL=OFF \
-D BUILD_ZLIB=ON \
-D BUILD_TIFF=ON \
-D WITH_FFMPEG=ON \
-D WITH_TBB=ON \
-D BUILD_TBB=ON \
-D BUILD_TESTS=OFF \
-D WITH_EIGEN=OFF \
-D WITH_GSTREAMER=ON \
-D WITH_V4L=ON \
-D WITH_LIBV4L=ON \
-D WITH_VTK=OFF \
-D WITH_QT=OFF \
-D OPENCV_ENABLE_NONFREE=ON \
-D INSTALL_C_EXAMPLES=OFF \
-D INSTALL_PYTHON_EXAMPLES=OFF \
-D BUILD_opencv_python3=TRUE \
-D OPENCV_GENERATE_PKGCONFIG=ON \
-D BUILD_EXAMPLES=OFF ..
# && make install \
# && apt-get -qq autoremove \
# && apt-get -qq clean
   
RUN make -j$(nproc)
RUN make install
RUN ldconfig
# cleaning (frees 300 KB)
RUN make clean
RUN apt-get update
RUN usermod -a -G video root
WORKDIR /app


RUN pip install --upgrade setuptools && pip3 install --upgrade pip 
RUN pip install azure-iot-device \
azure-mgmt-iothub \
requests \
trollius \
tornado \
asyncio \
ffmpeg





#RUN pip install azure-iothub-device-client opencv-contrib-python requests ptvsd requests
# pyaudio wave 

# Cleanup
RUN rm -rf /var/lib/apt/lists/* \
    && apt-get -y autoremove


# Raspberry Kernel 4.19 Sound Issues - Stretch and Buster
# Kernel 4.19 Sound & latest updates... https://www.raspberrypi.org/forums/viewtopic.php?t=241814

ENV PA_ALSA_PLUGHW=1

# disable python buffering to console out (https://docs.python.org/2/using/cmdline.html#envvar-PYTHONUNBUFFERED)
ENV PYTHONUNBUFFERED=1

EXPOSE 5012

RUN [ "cross-build-end" ]  

ADD /app/ .
# COPY app .
#ENV UDEV=1 

# CMD [ "python", "./main.py" ]
ENTRYPOINT [ "python3", "-u", "./main.py" ]
